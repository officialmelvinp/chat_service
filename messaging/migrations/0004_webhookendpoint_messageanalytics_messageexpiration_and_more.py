# Generated by Django 5.2.1 on 2025-06-04 03:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0003_conversationparticipant_messagereaction_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('secret_key', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('events', models.JSONField(default=list)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_failed', models.PositiveIntegerField(default=0)),
                ('last_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('read_count', models.PositiveIntegerField(default=0)),
                ('reaction_count', models.PositiveIntegerField(default=0)),
                ('reply_count', models.PositiveIntegerField(default=0)),
                ('first_delivered_at', models.DateTimeField(blank=True, null=True)),
                ('first_read_at', models.DateTimeField(blank=True, null=True)),
                ('average_read_time', models.DurationField(blank=True, null=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='messaging.message')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageExpiration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_type', models.CharField(choices=[('1h', '1 Hour'), ('24h', '24 Hours'), ('7d', '7 Days'), ('30d', '30 Days'), ('read_once', 'Disappear after reading'), ('never', 'Never expire')], max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expiration', to='messaging.message')),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_expiring_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserEngagementAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_messages_sent', models.PositiveIntegerField(default=0)),
                ('total_messages_received', models.PositiveIntegerField(default=0)),
                ('total_reactions_given', models.PositiveIntegerField(default=0)),
                ('total_reactions_received', models.PositiveIntegerField(default=0)),
                ('total_conversations', models.PositiveIntegerField(default=0)),
                ('active_conversations', models.PositiveIntegerField(default=0)),
                ('most_active_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('most_active_day', models.PositiveIntegerField(blank=True, null=True)),
                ('average_response_time', models.DurationField(blank=True, null=True)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentModerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.CharField(choices=[('message', 'Message'), ('profile', 'Profile'), ('image', 'Image')], max_length=20)),
                ('content_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('flagged', 'Flagged for Review'), ('blocked', 'Blocked/Censored'), ('warning', 'Warning Issued'), ('approved', 'Approved')], max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('is_automated', models.BooleanField(default=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_reviews', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='messaging_c_content_22b743_idx'), models.Index(fields=['user', 'action'], name='messaging_c_user_id_887583_idx'), models.Index(fields=['is_automated', 'action'], name='messaging_c_is_auto_33b6b6_idx')],
            },
        ),
        migrations.CreateModel(
            name='RateLimitTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=50)),
                ('count', models.PositiveIntegerField(default=1)),
                ('window_start', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'action_type', 'window_start'], name='messaging_r_user_id_95abb6_idx')],
                'unique_together': {('user', 'action_type', 'window_start')},
            },
        ),
        migrations.CreateModel(
            name='UserEncryptionKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('private_key', models.BinaryField()),
                ('public_key', models.BinaryField()),
                ('key_version', models.PositiveIntegerField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_key', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='messaging_u_user_id_1e6d13_idx')],
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(max_length=50)),
                ('payload', models.JSONField()),
                ('response_status', models.PositiveIntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('delivery_attempts', models.PositiveIntegerField(default=0)),
                ('is_delivered', models.BooleanField(default=False)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('endpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='messaging.webhookendpoint')),
            ],
            options={
                'indexes': [models.Index(fields=['endpoint', 'is_delivered'], name='messaging_w_endpoin_37af44_idx'), models.Index(fields=['next_retry_at'], name='messaging_w_next_re_70ddd0_idx')],
            },
        ),
    ]
